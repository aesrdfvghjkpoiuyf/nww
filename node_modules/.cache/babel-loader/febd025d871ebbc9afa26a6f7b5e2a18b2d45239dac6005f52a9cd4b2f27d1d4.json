{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\neeee\\\\Group Call\\\\sample-01\\\\src\\\\components\\\\organisms\\\\DeviceSettings\\\\DeviceSettings.tsx\",\n  _s = $RefreshSig$();\nimport { useSbCalls } from 'lib/sendbird-calls/SbCallsContext';\nimport { Fragment, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Modal from 'components/templates/Modal';\nimport { small, normal, heavy } from 'styles/fonts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  \n`;\nconst SelectContainer = styled.div`\n  width: 100%;\n  max-width: 500px;\n  margin-bottom: 22px;\n  background-color: var(--white);\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n_c = SelectContainer;\nconst SelectLabel = styled.label`\n  ${small};\n  ${heavy};\n  display: inline-block;\n  height: 12px;\n  margin-bottom: 6px;\n`;\n_c2 = SelectLabel;\nconst Select = styled.select`\n  ${normal};\n  ${heavy};\n  appearance: none;\n  width: 100%;\n  height: 40px;\n  padding: 10px 36px 10px 16px;\n  border-radius: 4px;\n  border: solid 1px var(--navy-200);\n  background-color: var(--white);\n  background-image: url(/icons/ic-input-arrow-down.svg);\n  background-repeat: no-repeat;\n  background-position: calc(100% - 12px) center;\n`;\n_c3 = Select;\nconst DeviceSettings = props => {\n  _s();\n  var _sbCalls$videoInputDe, _sbCalls$audioInputDe, _sbCalls$audioOutputD;\n  const sbCalls = useSbCalls();\n  useEffect(() => {\n    if (props.isOpen) sbCalls.updateMediaDevices({\n      audio: true,\n      video: true\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    shouldCloseOnOverlayClick: true,\n    title: \"Settings\",\n    content: /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SelectContainer, {\n        children: [/*#__PURE__*/_jsxDEV(SelectLabel, {\n          htmlFor: \"camera-select\",\n          children: \"Camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          id: \"camera-select\",\n          defaultValue: (_sbCalls$videoInputDe = sbCalls.videoInputDeviceInfo.current) === null || _sbCalls$videoInputDe === void 0 ? void 0 : _sbCalls$videoInputDe.deviceId,\n          onChange: e => {\n            const {\n              value\n            } = e.target;\n            const mediaInfo = sbCalls.videoInputDeviceInfo.available.find(device => device.deviceId === value);\n            if (mediaInfo) sbCalls.selectVideoInputDevice(mediaInfo);\n          },\n          children: sbCalls.videoInputDeviceInfo.available.map(info => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: info.deviceId,\n            children: info.label\n          }, info.deviceId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SelectContainer, {\n        children: [/*#__PURE__*/_jsxDEV(SelectLabel, {\n          htmlFor: \"microphone-select\",\n          children: \"Microphone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          id: \"microphone-select\",\n          defaultValue: (_sbCalls$audioInputDe = sbCalls.audioInputDeviceInfo.current) === null || _sbCalls$audioInputDe === void 0 ? void 0 : _sbCalls$audioInputDe.deviceId,\n          onChange: e => {\n            const {\n              value\n            } = e.target;\n            const mediaInfo = sbCalls.audioInputDeviceInfo.available.find(device => device.deviceId === value);\n            if (mediaInfo) sbCalls.selectAudioInputDevice(mediaInfo);\n          },\n          children: sbCalls.audioInputDeviceInfo.available.map(info => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: info.deviceId,\n            children: info.label\n          }, info.deviceId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SelectContainer, {\n        children: [/*#__PURE__*/_jsxDEV(SelectLabel, {\n          htmlFor: \"speaker-select\",\n          children: \"Speaker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          id: \"speaker-select\",\n          defaultValue: (_sbCalls$audioOutputD = sbCalls.audioOutputDeviceInfo.current) === null || _sbCalls$audioOutputD === void 0 ? void 0 : _sbCalls$audioOutputD.deviceId,\n          onChange: e => {\n            const {\n              value\n            } = e.target;\n            const mediaInfo = sbCalls.audioOutputDeviceInfo.available.find(device => device.deviceId === value);\n            if (mediaInfo) sbCalls.selectAudioOutputDevice(mediaInfo);\n          },\n          children: sbCalls.audioOutputDeviceInfo.available.map(info => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: info.deviceId,\n            children: info.label\n          }, info.deviceId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this),\n    footer: {},\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(DeviceSettings, \"xo9/kh4az79NStYFFQXxplljf0U=\", false, function () {\n  return [useSbCalls];\n});\n_c4 = DeviceSettings;\nexport default DeviceSettings;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"SelectContainer\");\n$RefreshReg$(_c2, \"SelectLabel\");\n$RefreshReg$(_c3, \"Select\");\n$RefreshReg$(_c4, \"DeviceSettings\");","map":{"version":3,"names":["useSbCalls","Fragment","useEffect","styled","Modal","small","normal","heavy","jsxDEV","_jsxDEV","Wrapper","div","SelectContainer","_c","SelectLabel","label","_c2","Select","select","_c3","DeviceSettings","props","_s","_sbCalls$videoInputDe","_sbCalls$audioInputDe","_sbCalls$audioOutputD","sbCalls","isOpen","updateMediaDevices","audio","video","shouldCloseOnOverlayClick","title","content","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","defaultValue","videoInputDeviceInfo","current","deviceId","onChange","e","value","target","mediaInfo","available","find","device","selectVideoInputDevice","map","info","audioInputDeviceInfo","selectAudioInputDevice","audioOutputDeviceInfo","selectAudioOutputDevice","footer","_c4","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/neeee/Group Call/sample-01/src/components/organisms/DeviceSettings/DeviceSettings.tsx"],"sourcesContent":["import { useSbCalls } from 'lib/sendbird-calls/SbCallsContext';\r\nimport { Fragment, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Modal from 'components/templates/Modal';\r\nimport ReactModal from 'react-modal';\r\nimport { small, normal, heavy } from 'styles/fonts';\r\n\r\nconst Wrapper = styled.div`\r\n  \r\n`;\r\n\r\nconst SelectContainer = styled.div`\r\n  width: 100%;\r\n  max-width: 500px;\r\n  margin-bottom: 22px;\r\n  background-color: var(--white);\r\n  &:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst SelectLabel = styled.label`\r\n  ${small};\r\n  ${heavy};\r\n  display: inline-block;\r\n  height: 12px;\r\n  margin-bottom: 6px;\r\n`;\r\n\r\nconst Select = styled.select`\r\n  ${normal};\r\n  ${heavy};\r\n  appearance: none;\r\n  width: 100%;\r\n  height: 40px;\r\n  padding: 10px 36px 10px 16px;\r\n  border-radius: 4px;\r\n  border: solid 1px var(--navy-200);\r\n  background-color: var(--white);\r\n  background-image: url(/icons/ic-input-arrow-down.svg);\r\n  background-repeat: no-repeat;\r\n  background-position: calc(100% - 12px) center;\r\n`;\r\n\r\nconst DeviceSettings = (props: ReactModal.Props & { close: () => void; title?: string; }) => {\r\n  const sbCalls = useSbCalls();\r\n\r\n  useEffect(() => {\r\n    if (props.isOpen) sbCalls.updateMediaDevices({ audio: true, video: true });\r\n  }, []);\r\n\r\n  return (\r\n    <Modal\r\n      shouldCloseOnOverlayClick\r\n      title=\"Settings\"\r\n      content={(\r\n        <Fragment>\r\n          <SelectContainer>\r\n            <SelectLabel htmlFor=\"camera-select\">Camera</SelectLabel>\r\n            <Select\r\n              id=\"camera-select\"\r\n              defaultValue={sbCalls.videoInputDeviceInfo.current?.deviceId}\r\n              onChange={e => {\r\n                const { value } = e.target;\r\n                const mediaInfo = sbCalls.videoInputDeviceInfo.available.find(device => device.deviceId === value);\r\n                if (mediaInfo) sbCalls.selectVideoInputDevice(mediaInfo);\r\n              }}\r\n            >\r\n              {sbCalls.videoInputDeviceInfo.available.map(info => (\r\n                <option key={info.deviceId} value={info.deviceId}>{info.label}</option>\r\n              ))}\r\n            </Select>\r\n          </SelectContainer>\r\n\r\n          <SelectContainer>\r\n            <SelectLabel htmlFor=\"microphone-select\">Microphone</SelectLabel>\r\n            <Select\r\n              id=\"microphone-select\"\r\n              defaultValue={sbCalls.audioInputDeviceInfo.current?.deviceId}\r\n              onChange={e => {\r\n                const { value } = e.target;\r\n                const mediaInfo = sbCalls.audioInputDeviceInfo.available.find(device => device.deviceId === value);\r\n                if (mediaInfo) sbCalls.selectAudioInputDevice(mediaInfo);\r\n              }}\r\n            >\r\n              {sbCalls.audioInputDeviceInfo.available.map(info => (\r\n                <option key={info.deviceId} value={info.deviceId}>{info.label}</option>\r\n              ))}\r\n            </Select>\r\n          </SelectContainer>\r\n\r\n          <SelectContainer>\r\n            <SelectLabel htmlFor=\"speaker-select\">Speaker</SelectLabel>\r\n            <Select\r\n              id=\"speaker-select\"\r\n              defaultValue={sbCalls.audioOutputDeviceInfo.current?.deviceId}\r\n              onChange={e => {\r\n                const { value } = e.target;\r\n                const mediaInfo = sbCalls.audioOutputDeviceInfo.available.find(device => device.deviceId === value);\r\n                if (mediaInfo) sbCalls.selectAudioOutputDevice(mediaInfo);\r\n              }}\r\n            >\r\n              {sbCalls.audioOutputDeviceInfo.available.map(info => (\r\n                <option key={info.deviceId} value={info.deviceId}>{info.label}</option>\r\n              ))}\r\n            </Select>\r\n          </SelectContainer>\r\n        </Fragment>\r\n      )}\r\n      footer={{}}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DeviceSettings;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}