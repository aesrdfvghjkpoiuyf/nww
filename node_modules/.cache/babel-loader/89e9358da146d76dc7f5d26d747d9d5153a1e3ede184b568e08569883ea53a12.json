{"ast":null,"code":"import { createContext } from 'react';\nimport { initialState } from './state';\nimport { RoomType } from 'sendbird-calls';\n\n/** Context */\n\nconst stub = () => {\n  throw new Error('You forgot to wrap your component in <AuthContext>.');\n};\nexport const initialContext = {\n  ...initialState,\n  isAuthenticated: false,\n  init: stub,\n  auth: stub,\n  deauth: stub,\n  // Media Device Control\n  updateMediaDevices: stub,\n  selectAudioInputDevice: stub,\n  selectAudioOutputDevice: stub,\n  selectVideoInputDevice: stub,\n  // Direct Calls\n  isBusy: false,\n  currentCall: undefined,\n  dial: stub,\n  addDirectCallSound: stub,\n  clearCalls: stub,\n  // Rooms\n  createRoom: stub,\n  getCachedRoomById: stub,\n  fetchRoomById: stub,\n  RoomType: RoomType\n};\nconst CallContext = /*#__PURE__*/createContext(initialContext);\nexport default CallContext;","map":{"version":3,"names":["createContext","initialState","RoomType","stub","Error","initialContext","isAuthenticated","init","auth","deauth","updateMediaDevices","selectAudioInputDevice","selectAudioOutputDevice","selectVideoInputDevice","isBusy","currentCall","undefined","dial","addDirectCallSound","clearCalls","createRoom","getCachedRoomById","fetchRoomById","CallContext"],"sources":["C:/Users/HP/Desktop/neeee/Group Call/sample-01/src/lib/sendbird-calls/SbCallsContext/context.tsx"],"sourcesContent":["import { createContext } from 'react';\r\n\r\nimport { State, initialState } from './state';\r\nimport type { StatefulDirectCall, StatefulRoom } from './types';\r\nimport SendbirdCall, { RoomParams, RoomType } from 'sendbird-calls';\r\nimport type { DialParams } from 'sendbird-calls';\r\n\r\n/** Context */\r\nexport type ContextType = State & {\r\n  isAuthenticated: boolean;\r\n  init: (appId: string) => void;\r\n  auth: typeof SendbirdCall.authenticate; // TODO: Stateful SbUser\r\n  deauth: () => void;\r\n\r\n  // Media Device Control\r\n  updateMediaDevices: (constraints: { audio: boolean; video: boolean; }) => void;\r\n  selectAudioInputDevice: (deviceInfo: InputDeviceInfo) => void;\r\n  selectAudioOutputDevice: (deviceInfo: MediaDeviceInfo) => void;\r\n  selectVideoInputDevice: (deviceInfo: InputDeviceInfo) => void;\r\n\r\n  // Direct Calls\r\n  isBusy: boolean;\r\n  currentCall?: StatefulDirectCall;\r\n  dial: (params: DialParams) => Promise<StatefulDirectCall>;\r\n  addDirectCallSound: typeof SendbirdCall.addDirectCallSound;\r\n  clearCalls: () => void;\r\n\r\n  // Rooms\r\n  createRoom: (options: RoomParams) => Promise<StatefulRoom>,\r\n  getCachedRoomById: (roomId: string) => StatefulRoom | undefined,\r\n  fetchRoomById: (roomId: string) => Promise<StatefulRoom>,\r\n  RoomType: typeof RoomType,\r\n};\r\n\r\nconst stub = (): never => {\r\n  throw new Error('You forgot to wrap your component in <AuthContext>.');\r\n};\r\n\r\nexport const initialContext: ContextType = {\r\n  ...initialState,\r\n  isAuthenticated: false,\r\n  init: stub,\r\n  auth: stub,\r\n  deauth: stub,\r\n\r\n  // Media Device Control\r\n  updateMediaDevices: stub,\r\n  selectAudioInputDevice: stub,\r\n  selectAudioOutputDevice: stub,\r\n  selectVideoInputDevice: stub,\r\n\r\n  // Direct Calls\r\n  isBusy: false,\r\n  currentCall: undefined,\r\n  dial: stub,\r\n  addDirectCallSound: stub,\r\n  clearCalls: stub,\r\n\r\n  // Rooms\r\n  createRoom: stub,\r\n  getCachedRoomById: stub,\r\n  fetchRoomById: stub,\r\n  RoomType: RoomType,\r\n};\r\n\r\nconst CallContext = createContext<ContextType>(initialContext);\r\n\r\nexport default CallContext;\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,OAAO;AAErC,SAAgBC,YAAY,QAAQ,SAAS;AAE7C,SAAmCC,QAAQ,QAAQ,gBAAgB;;AAGnE;;AA2BA,MAAMC,IAAI,GAAGA,CAAA,KAAa;EACxB,MAAM,IAAIC,KAAK,CAAC,qDAAqD,CAAC;AACxE,CAAC;AAED,OAAO,MAAMC,cAA2B,GAAG;EACzC,GAAGJ,YAAY;EACfK,eAAe,EAAE,KAAK;EACtBC,IAAI,EAAEJ,IAAI;EACVK,IAAI,EAAEL,IAAI;EACVM,MAAM,EAAEN,IAAI;EAEZ;EACAO,kBAAkB,EAAEP,IAAI;EACxBQ,sBAAsB,EAAER,IAAI;EAC5BS,uBAAuB,EAAET,IAAI;EAC7BU,sBAAsB,EAAEV,IAAI;EAE5B;EACAW,MAAM,EAAE,KAAK;EACbC,WAAW,EAAEC,SAAS;EACtBC,IAAI,EAAEd,IAAI;EACVe,kBAAkB,EAAEf,IAAI;EACxBgB,UAAU,EAAEhB,IAAI;EAEhB;EACAiB,UAAU,EAAEjB,IAAI;EAChBkB,iBAAiB,EAAElB,IAAI;EACvBmB,aAAa,EAAEnB,IAAI;EACnBD,QAAQ,EAAEA;AACZ,CAAC;AAED,MAAMqB,WAAW,gBAAGvB,aAAa,CAAcK,cAAc,CAAC;AAE9D,eAAekB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}