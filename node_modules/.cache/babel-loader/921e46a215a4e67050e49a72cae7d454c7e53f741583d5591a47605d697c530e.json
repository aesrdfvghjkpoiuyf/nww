{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\neeee\\\\quickstart-calls-reactjs\\\\sample-01\\\\src\\\\lib\\\\sendbird-calls\\\\SbCallsContext\\\\provider.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useMemo, useReducer } from 'react';\nimport SendbirdCall, { LoggerLevel, sdkVersion, SoundType, RoomType } from 'sendbird-calls';\nimport CallContext, { initialContext } from './context';\nimport { reducer } from './reducer';\nimport { initialState } from './state';\nimport { statefyDirectCall, statefyRoom } from './statefy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log({\n  SoundType,\n  sdkVersion\n});\n\n/**\r\n * Provider\r\n * ```tsx\r\n * <SbCallsProvider>\r\n *   <MyApp />\r\n * </Auth0Provider>\r\n * ```\r\n *\r\n * Provides the SbCallsProvider to its child components.\r\n */\nconst SbCallsProvider = ({\n  appId,\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {\n    calls\n  } = state;\n  const currentCall = useMemo(() => calls.find(call => !call.isEnded), [calls]);\n  const isBusy = useMemo(() => calls.some(call => !call.isEnded), [calls]);\n  const init = useCallback(nAppId => {\n    const listenerId = 'device-change-listener';\n    try {\n      SendbirdCall.removeListener(listenerId);\n    } catch (error) {}\n    SendbirdCall.init(nAppId);\n    SendbirdCall.setLoggerLevel(LoggerLevel.ERROR);\n    SendbirdCall.addListener(listenerId, {\n      onRinging: call => {},\n      onAudioInputDeviceChanged: (current, available) => {\n        dispatch({\n          type: 'UPDATE_AUDIO_INPUT_DEVICE_INFO',\n          payload: {\n            current,\n            available\n          }\n        });\n      },\n      onAudioOutputDeviceChanged: (current, available) => {\n        dispatch({\n          type: 'UPDATE_AUDIO_OUTPUT_DEVICE_INFO',\n          payload: {\n            current,\n            available\n          }\n        });\n      },\n      onVideoInputDeviceChanged: (current, available) => {\n        dispatch({\n          type: 'UPDATE_VIDEO_INPUT_DEVICE_INFO',\n          payload: {\n            current,\n            available\n          }\n        });\n      }\n    });\n    SendbirdCall.updateMediaDevices({\n      audio: true,\n      video: true\n    });\n  }, []);\n  useEffect(() => {\n    if (appId) init(appId);\n  }, [appId]);\n  const ringingListenerId = 'sb-call-listener';\n  const auth = useCallback(async authOption => {\n    const user = await SendbirdCall.authenticate(authOption);\n    SendbirdCall.addListener(ringingListenerId, {\n      onRinging: call => {\n        dispatch({\n          type: 'RINGING',\n          payload: statefyDirectCall(call, dispatch)\n        });\n      },\n      onAudioInputDeviceChanged: (current, available) => {},\n      onAudioOutputDeviceChanged: (current, available) => {},\n      onVideoInputDeviceChanged: (current, available) => {}\n    });\n    await SendbirdCall.connectWebSocket();\n    dispatch({\n      type: 'AUTH',\n      payload: user\n    });\n    return user;\n  }, []);\n  const deauth = useCallback(() => {\n    SendbirdCall.removeListener(ringingListenerId);\n    SendbirdCall.deauthenticate();\n    dispatch({\n      type: 'DEAUTH'\n    });\n  }, []);\n\n  /*\r\n    Media Device Control\r\n   */\n  const updateMediaDevices = useCallback(constraints => {\n    SendbirdCall.updateMediaDevices(constraints);\n  }, []);\n  const selectAudioInputDevice = useCallback(mediaInfo => {\n    SendbirdCall.selectAudioInputDevice(mediaInfo);\n    dispatch({\n      type: 'UPDATE_AUDIO_INPUT_DEVICE_INFO',\n      payload: {\n        current: mediaInfo\n      }\n    });\n  }, []);\n  const selectAudioOutputDevice = useCallback(mediaInfo => {\n    SendbirdCall.selectAudioOutputDevice(mediaInfo);\n    dispatch({\n      type: 'UPDATE_AUDIO_OUTPUT_DEVICE_INFO',\n      payload: {\n        current: mediaInfo\n      }\n    });\n  }, []);\n  const selectVideoInputDevice = useCallback(mediaInfo => {\n    SendbirdCall.selectVideoInputDevice(mediaInfo);\n    dispatch({\n      type: 'UPDATE_VIDEO_INPUT_DEVICE_INFO',\n      payload: {\n        current: mediaInfo\n      }\n    });\n  }, []);\n\n  /*\r\n    Direct Calls\r\n   */\n  const dial = useCallback(params => new Promise((res, rej) => {\n    // TODO: this is really confusing...\n    SendbirdCall.dial(params, (call, error) => {\n      const statefulCall = statefyDirectCall(call, dispatch);\n      if (error) {\n        rej(error);\n        return;\n      }\n      dispatch({\n        type: 'ADD_CALL',\n        payload: statefulCall\n      });\n      res(statefulCall);\n    });\n  }), []);\n  const clearCalls = useCallback(() => {\n    dispatch({\n      type: 'CLEAR_CALLS'\n    });\n  }, []);\n\n  /*\r\n    Rooms\r\n   */\n  const createRoom = useCallback(async options => {\n    const room = await SendbirdCall.createRoom(options);\n    const statefulRoom = statefyRoom(room, dispatch);\n    dispatch({\n      type: 'ADD_ROOM',\n      payload: statefulRoom\n    });\n    return statefulRoom;\n  }, []);\n  const getCachedRoomById = useCallback(roomId => {\n    return state.rooms.find(x => x.roomId === roomId);\n  }, [state.rooms]);\n  const fetchRoomById = useCallback(async roomId => {\n    const room = await SendbirdCall.fetchRoomById(roomId);\n    const statefulRoom = statefyRoom(room, dispatch);\n    if (state.rooms.find(x => x.roomId === room.roomId)) {\n      dispatch({\n        type: 'UPDATE_ROOM',\n        payload: statefulRoom\n      });\n    } else {\n      dispatch({\n        type: 'ADD_ROOM',\n        payload: statefulRoom\n      });\n    }\n    return statefulRoom;\n  }, [state.rooms]);\n  const callContext = {\n    ...initialContext,\n    ...state,\n    init,\n    auth,\n    deauth,\n    isAuthenticated: !!state.user,\n    // Media Device Control\n    updateMediaDevices,\n    selectAudioInputDevice,\n    selectAudioOutputDevice,\n    selectVideoInputDevice,\n    // Direct Calls\n    currentCall,\n    isBusy,\n    dial,\n    addDirectCallSound: SendbirdCall.addDirectCallSound,\n    clearCalls,\n    // Rooms\n    createRoom,\n    getCachedRoomById,\n    fetchRoomById,\n    RoomType\n  };\n  console.log('call context', callContext.calls, callContext.calls.length);\n  return /*#__PURE__*/_jsxDEV(CallContext.Provider, {\n    value: callContext,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_s(SbCallsProvider, \"NerzJbdf2yyUxkWjyKzR+U90o2Q=\");\n_c = SbCallsProvider;\nexport default SbCallsProvider;\nvar _c;\n$RefreshReg$(_c, \"SbCallsProvider\");","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useReducer","SendbirdCall","LoggerLevel","sdkVersion","SoundType","RoomType","CallContext","initialContext","reducer","initialState","statefyDirectCall","statefyRoom","jsxDEV","_jsxDEV","console","log","SbCallsProvider","appId","children","_s","state","dispatch","calls","currentCall","find","call","isEnded","isBusy","some","init","nAppId","listenerId","removeListener","error","setLoggerLevel","ERROR","addListener","onRinging","onAudioInputDeviceChanged","current","available","type","payload","onAudioOutputDeviceChanged","onVideoInputDeviceChanged","updateMediaDevices","audio","video","ringingListenerId","auth","authOption","user","authenticate","connectWebSocket","deauth","deauthenticate","constraints","selectAudioInputDevice","mediaInfo","selectAudioOutputDevice","selectVideoInputDevice","dial","params","Promise","res","rej","statefulCall","clearCalls","createRoom","options","room","statefulRoom","getCachedRoomById","roomId","rooms","x","fetchRoomById","callContext","isAuthenticated","addDirectCallSound","length","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/neeee/quickstart-calls-reactjs/sample-01/src/lib/sendbird-calls/SbCallsContext/provider.tsx"],"sourcesContent":["import React, { ReactElement, useCallback, useEffect, useMemo, useReducer } from 'react';\r\nimport type { AuthOption, DirectCall } from 'sendbird-calls';\r\nimport SendbirdCall, { LoggerLevel, sdkVersion, SoundType, RoomType } from 'sendbird-calls';\r\n\r\nimport CallContext, { initialContext } from './context';\r\nimport type { ContextType } from './context';\r\nimport { reducer } from './reducer';\r\nimport { initialState } from './state';\r\nimport { statefyDirectCall, statefyRoom } from './statefy';\r\n\r\nconsole.log({ SoundType, sdkVersion });\r\n\r\n/**\r\n * Provider\r\n * ```tsx\r\n * <SbCallsProvider>\r\n *   <MyApp />\r\n * </Auth0Provider>\r\n * ```\r\n *\r\n * Provides the SbCallsProvider to its child components.\r\n */\r\nconst SbCallsProvider = ({\r\n  appId,\r\n  children,\r\n}: {\r\n  appId: string;\r\n  children: ReactElement;\r\n}): JSX.Element => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { calls } = state;\r\n  const currentCall = useMemo(() => calls.find(call => !call.isEnded), [calls]);\r\n  const isBusy = useMemo(() => calls.some(call => !call.isEnded), [calls]);\r\n\r\n  const init = useCallback<ContextType['init']>(nAppId => {\r\n    const listenerId = 'device-change-listener';\r\n    try {\r\n      SendbirdCall.removeListener(listenerId);\r\n    } catch (error) {\r\n\r\n    }\r\n    SendbirdCall.init(nAppId);\r\n    SendbirdCall.setLoggerLevel(LoggerLevel.ERROR);\r\n    SendbirdCall.addListener(listenerId, {\r\n      onRinging: (call: DirectCall) => {},\r\n      onAudioInputDeviceChanged: (current, available) => {\r\n        dispatch({ type: 'UPDATE_AUDIO_INPUT_DEVICE_INFO', payload: { current, available } });\r\n      },\r\n      onAudioOutputDeviceChanged: (current, available) => {\r\n        dispatch({ type: 'UPDATE_AUDIO_OUTPUT_DEVICE_INFO', payload: { current, available } });\r\n      },\r\n      onVideoInputDeviceChanged: (current, available) => {\r\n        dispatch({ type: 'UPDATE_VIDEO_INPUT_DEVICE_INFO', payload: { current, available } });\r\n      },\r\n    });\r\n    SendbirdCall.updateMediaDevices({ audio: true, video: true });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (appId) init(appId);\r\n  }, [appId]);\r\n\r\n  const ringingListenerId = 'sb-call-listener';\r\n  const auth = useCallback(async (authOption: AuthOption) => {\r\n    const user = await SendbirdCall.authenticate(authOption);\r\n    SendbirdCall.addListener(ringingListenerId, {\r\n      onRinging: (call: DirectCall) => {\r\n        dispatch({ type: 'RINGING', payload: statefyDirectCall(call, dispatch) });\r\n      },\r\n      onAudioInputDeviceChanged: (current, available) => {},\r\n      onAudioOutputDeviceChanged: (current, available) => {},\r\n      onVideoInputDeviceChanged: (current, available) => {},\r\n    });\r\n    await SendbirdCall.connectWebSocket();\r\n\r\n    dispatch({ type: 'AUTH', payload: user });\r\n    return user;\r\n  }, []);\r\n\r\n  const deauth = useCallback<ContextType['deauth']>(() => {\r\n    SendbirdCall.removeListener(ringingListenerId);\r\n    SendbirdCall.deauthenticate();\r\n    dispatch({ type: 'DEAUTH' });\r\n  }, []);\r\n\r\n  /*\r\n    Media Device Control\r\n   */\r\n  const updateMediaDevices = useCallback<ContextType['updateMediaDevices']>(\r\n    (constraints) => {\r\n      SendbirdCall.updateMediaDevices(constraints);\r\n    }, []\r\n  );\r\n\r\n  const selectAudioInputDevice = useCallback<ContextType['selectAudioInputDevice']>(\r\n    (mediaInfo: InputDeviceInfo) => {\r\n      SendbirdCall.selectAudioInputDevice(mediaInfo);\r\n      dispatch({ type: 'UPDATE_AUDIO_INPUT_DEVICE_INFO', payload: { current: mediaInfo }});\r\n    }, []\r\n  );\r\n\r\n  const selectAudioOutputDevice = useCallback<ContextType['selectAudioOutputDevice']>(\r\n    (mediaInfo: MediaDeviceInfo) => {\r\n      SendbirdCall.selectAudioOutputDevice(mediaInfo);\r\n      dispatch({ type: 'UPDATE_AUDIO_OUTPUT_DEVICE_INFO', payload: { current: mediaInfo }});\r\n    }, []\r\n  );\r\n\r\n  const selectVideoInputDevice = useCallback<ContextType['selectVideoInputDevice']>(\r\n    (mediaInfo: InputDeviceInfo) => {\r\n      SendbirdCall.selectVideoInputDevice(mediaInfo);\r\n      dispatch({ type: 'UPDATE_VIDEO_INPUT_DEVICE_INFO', payload: { current: mediaInfo }});\r\n    }, []\r\n  );\r\n\r\n  /*\r\n    Direct Calls\r\n   */\r\n  const dial = useCallback<ContextType['dial']>(\r\n    params => new Promise((res, rej) => {\r\n      // TODO: this is really confusing...\r\n      SendbirdCall.dial(params, (call, error) => {\r\n        const statefulCall = statefyDirectCall(call as DirectCall, dispatch);\r\n        if (error) {\r\n          rej(error);\r\n          return;\r\n        }\r\n        dispatch({ type: 'ADD_CALL', payload: statefulCall });\r\n        res(statefulCall);\r\n      });\r\n    }),\r\n    [],\r\n  );\r\n\r\n  const clearCalls = useCallback(() => {\r\n    dispatch({ type: 'CLEAR_CALLS' });\r\n  }, []);\r\n\r\n\r\n  /*\r\n    Rooms\r\n   */\r\n  const createRoom = useCallback<ContextType['createRoom']>(\r\n    async options => {\r\n      const room = await SendbirdCall.createRoom(options);\r\n      const statefulRoom = statefyRoom(room, dispatch);\r\n      dispatch({ type: 'ADD_ROOM', payload: statefulRoom });\r\n      return statefulRoom;\r\n    },\r\n    []\r\n  )\r\n\r\n  const getCachedRoomById = useCallback<ContextType['getCachedRoomById']>(\r\n    roomId => {\r\n      return state.rooms.find(x => x.roomId === roomId);\r\n    },\r\n    [state.rooms]\r\n  )\r\n\r\n  const fetchRoomById = useCallback<ContextType['fetchRoomById']>(\r\n    async roomId => {\r\n      const room = await SendbirdCall.fetchRoomById(roomId);\r\n      const statefulRoom = statefyRoom(room, dispatch);\r\n      if (state.rooms.find(x => x.roomId === room.roomId)) {\r\n        dispatch({ type: 'UPDATE_ROOM', payload: statefulRoom });\r\n      } else {\r\n        dispatch({ type: 'ADD_ROOM', payload: statefulRoom });\r\n      }\r\n      return statefulRoom;\r\n    },\r\n    [state.rooms]\r\n  )\r\n  const callContext: ContextType = {\r\n    ...initialContext,\r\n    ...state,\r\n    init,\r\n    auth,\r\n    deauth,\r\n    isAuthenticated: !!state.user,\r\n\r\n    // Media Device Control\r\n    updateMediaDevices,\r\n    selectAudioInputDevice,\r\n    selectAudioOutputDevice,\r\n    selectVideoInputDevice,\r\n\r\n    // Direct Calls\r\n    currentCall,\r\n    isBusy,\r\n    dial,\r\n    addDirectCallSound: SendbirdCall.addDirectCallSound,\r\n    clearCalls,\r\n\r\n    // Rooms\r\n    createRoom,\r\n    getCachedRoomById,\r\n    fetchRoomById,\r\n    RoomType,\r\n  };\r\n\r\n  console.log('call context', callContext.calls, callContext.calls.length);\r\n  return (\r\n    <CallContext.Provider value={callContext}>\r\n      {children}\r\n    </CallContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SbCallsProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}